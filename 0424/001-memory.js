

// * 가비지컬렉션
// - 참조카운트가 0인 객체를 메모리에서 제거하는 것
// - 참조카운트가 0이 되는 경우?
//   1. 객체가 처음 생성될 때
//   2. 객체에 다른 객체를 할당할 때
//   3. 객체의 프로퍼티를 삭제할 때
//   4. 객체의 프로퍼티에 다른 객체를 할당할 때
//   5. 객체가 함수의 인수로 전달될 때
//   6. 객체가 함수의 반환값으로 사용될 때
//   7. 객체가 함수의 프로퍼티로 할당될 때
//   8. 객체가 배열의 요소로 할당될 때
//   9. 객체가 이벤트 핸들러로 할당될 때
//   10. 객체가 setTimeout의 인수로 전달될 때
//   11. 객체가 setInterval의 인수로 전달될 때
//   12. 객체가 DOM 노드의 프로퍼티로 할당될 때



// case 1
let me = { age: 30 }; // 참조카운트 : 1;
let you = me;         // 참조카운트 : 2;

me = null // 참조카운트 : 1;
you = null // 참조카운트 : 0; 가비지컬렉션 대상


// case 2
let x = {
    y: {
        z: 1
    }
}

let a = x // 참조카운트 : 2;
x = 1     // 참조카운트 : 1;

// case 3
// closer 메모리 누수의 문제점
function makeCounter() {
    let count = 0;
    return function () {
        return count++;
    }
}
